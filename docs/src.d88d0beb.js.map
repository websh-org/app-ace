{"version":3,"sources":["../node_modules/@websh/remote-slave-port/remote-slave-port.mjs","../node_modules/@websh/web-shell-app/web-shell-app.mjs","index.js"],"names":["RemoteSlavePort","constructor","id","_port","_manifest","_commands","_handlers","_receive","cmd","args","rsvp","throw","res","result","transfer","concat","postMessage","re","error","message","String","data","_connect","ev","source","window","parent","port","manifest","removeEventListener","onmessage","addEventListener","m","on","fn","push","command","trigger","event","WebShellApp","title","icon","api","file","formats","type","encoding","new","open","save","format","content","mode","js","sql","extension","editor","session","setMode","setValue","getValue","ace","edit","setTheme"],"mappings":";AAA6B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAtB,MAAMA,EACXC,YAAYC,GACLC,KAAAA,MAAQ,KACRC,KAAAA,UAAY,GACZC,KAAAA,UAAY,GACZC,KAAAA,UAAY,GAEXC,MAAAA,EAAW,OAASC,IAAAA,EAAKC,KAAAA,EAAMC,KAAAA,MAC/B,IACGF,GACEG,KAAAA,MAAM,yBAER,KAAKN,UAAUG,IACbG,KAAAA,MAAM,yBAEPC,MAAAA,QAAY,KAAKP,UAAUG,GAAKC,IAC/BI,EAAQC,GAAY,GAAGC,OAAOH,GAChCT,KAAAA,MAAMa,YAAY,CAAEH,OAAAA,EAAQI,GAAIP,GAAQI,GAC7C,MAAOI,GACFf,KAAAA,MAAMa,YAAY,CAAEE,MAAOA,EAAMA,MAAOA,EAAMC,SAAWC,OAAOF,GAAQG,KAAKH,EAAMG,MAAQ,GAAIJ,GAAIP,MAUtGY,EAAYC,IACZA,EAAGC,SAAWC,OAAOC,QACpBH,EAAGF,MAASE,EAAGF,KAAKM,MAAyB,aAAhBJ,EAAGF,KAAKnB,KACrCC,KAAAA,MAAQoB,EAAGF,KAAKM,KAChBxB,KAAAA,MAAMa,YAAY,CAAGd,CAAAA,GAAK,YAAa0B,SAAU,KAAKxB,YAC3DqB,OAAOI,oBAAoB,UAAWP,GACjCnB,KAAAA,MAAM2B,UAAYP,CAAAA,IACrBhB,EAASgB,EAAGF,UAIhBI,OAAOM,iBAAiB,UAAWT,GAGrCM,SAASI,GAEA,OADF5B,KAAAA,UAAY4B,EACV,KAGTC,GAAGV,EAAIW,GAGE,OAFF5B,KAAAA,UAAUiB,GAAM,KAAKjB,UAAUiB,IAAO,GACtCjB,KAAAA,UAAUiB,GAAIY,KAAKD,GACjB,KAGTE,QAAQ5B,EAAK0B,GAEJ,OADF7B,KAAAA,UAAUG,GAAO0B,EACf,KAGTG,QAAQC,EAAOjB,EAAO,IAEb,OADPM,KAAKX,YAAY,CAAEsB,MAAAA,EAAOjB,KAAAA,IACnB,KAGTV,MAAMO,EAAOG,EAAO,IACZ,KAAA,CAAEH,MAAAA,EAAOG,KAAAA,IAjEU,QAAA,gBAAA;;ACE7B,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EAFA,IAAA,EAAA,QAAA,4BACakB,EAAc,IAAIvC,EAAJ,gBAAoB,eAC/C,QAAA,YAAA,EAAAuC,EAAYH,QAAQ,YAAY,WAAI,OAAA;;ACuCpC,aAzCA,IAAA,EAAA,QAAA,wBAEAG,EAAYX,YAAAA,SAAS,CACnBY,MAAM,aACNC,KAAM,gBACNC,IAAK,CACHC,KAAM,CACJC,QAAS,CACO,YAAA,CACZC,KAAM,oBACNL,MAAO,YACPM,SAAU,OACVC,KAAK,EACLC,MAAM,EACNC,MAAM,QAOhBV,EAAYH,YAAAA,QAAQ,YAAY,SAA8B,GAA5Bc,EAAAA,OAAAA,IAAOC,EAAAA,EAAAA,QAKjCC,EAJQ,CACZC,GAAI,aACJC,IAAK,OAHwCC,EAAAA,YAKd,OACjCC,EAAOC,QAAQC,QAAQ,YAAYN,GAEnCI,EAAOG,SAASR,KAGlBZ,EAAYH,YAAAA,QAAQ,YAAY,WACvBoB,OAAAA,EAAOI,aAGhBrB,EAAYH,YAAAA,QAAQ,WAAW,WAC7BoB,EAAOG,SAAS,MAGlB,IAAIH,EAASK,IAAIC,KAAK,UACtBN,EAAOO,SAAS","file":"src.d88d0beb.js","sourceRoot":"../src","sourcesContent":["export class RemoteSlavePort {\n  constructor(id) {\n    this._port = null;\n    this._manifest = {};\n    this._commands = {};\n    this._handlers = {};\n\n    const _receive = async ({ cmd, args, rsvp }) => {\n      try {\n        if (!cmd) {\n          this.throw(\"slave-specify-command\");\n        }\n        if (!this._commands[cmd]) {\n          this.throw(\"slave-no-such-command\");\n        }\n        const res = await this._commands[cmd](args);\n        const [result, transfer] = [].concat(res);\n        this._port.postMessage({ result, re: rsvp }, transfer)\n      } catch (error) {\n        this._port.postMessage({ error: error.error| error.message || String(error), data:error.data || {}, re: rsvp })\n      }\n    }\n\n    const _trigger = async (ev, data) => {\n      for (var h in this._handlers[ev]) {\n        this._handlers[ev][h](data);\n      }\n    }\n\n    const _connect = (ev) => {\n      if (ev.source !== window.parent) return;\n      if (!ev.data || !ev.data.port || !ev.data[id] === 'connect') return;\n      this._port = ev.data.port;\n      this._port.postMessage({ [id]: 'connected', manifest: this._manifest })\n      window.removeEventListener('message', _connect);\n      this._port.onmessage = ev => {\n        _receive(ev.data);\n      }\n    }\n\n    window.addEventListener('message', _connect);\n  }\n\n  manifest(m) {\n    this._manifest = m;\n    return this;\n  }\n\n  on(ev, fn) {\n    this._handlers[ev] = this._handlers[ev] || [];\n    this._handlers[ev].push(fn);\n    return this;\n  }\n\n  command(cmd, fn) {\n    this._commands[cmd] = fn;\n    return this;\n  }\n\n  trigger(event, data = {}) {\n    port.postMessage({ event, data });\n    return this;\n  }\n\n  throw(error, data = {}) {\n    throw { error, data }\n  }\n}\n","import { RemoteSlavePort } from \"@websh/remote-slave-port\";\nexport const WebShellApp = new RemoteSlavePort('SOUTH-TOOTH');\nWebShellApp.command('app-close',()=>true);","import { WebShellApp } from \"@websh/web-shell-app\";\n\nWebShellApp.manifest({\n  title:\"ACE Editor\",\n  icon: \"/ace-logo.png\",\n  api: {\n    file: {\n      formats: {\n        \"text-file\" : {\n          type: \"text/plain text/*\",\n          title: \"Text File\",\n          encoding: \"text\",\n          new: true,\n          open: true,\n          save: true\n        }\n      }\n    }\n  }\n})\n\nWebShellApp.command('file-open',({format,content,extension})=>{\n  const modes = {\n    js: \"javascript\",\n    sql: \"sql\"\n  };\n  const mode = modes[extension] || \"text\";\n  editor.session.setMode(\"ace/mode/\"+mode);\n  \n  editor.setValue(content);\n})\n\nWebShellApp.command('file-save',()=>{\n  return editor.getValue();\n})\n\nWebShellApp.command('file-new',()=>{\n  editor.setValue(\"\")\n})\n\nvar editor = ace.edit(\"editor\");\neditor.setTheme(\"ace/theme/monokai\");"]}